!function(){"use strict";var e="";const t=document.querySelectorAll(".modal");function n(e){"Escape"===e.key&&r(document.querySelector(".modal_open"))}function i(e){window.addEventListener("keydown",n),e.classList.add("modal_open")}function r(e){e.classList.remove("modal_open"),window.removeEventListener("keydown",n)}document.querySelectorAll(".modal__close").forEach((e=>{const t=e.closest(".modal");e.addEventListener("click",(()=>r(t)))})),t.forEach((e=>{e.addEventListener("mousedown",(t=>{t.target.classList.contains("modal_open")&&r(e)}))}));const o=document.querySelector("#image-modal"),a=o.querySelector(".modal__image-expanded"),l=o.querySelector(".modal__image-label");class s{constructor(e,t){this._src=e.link,this._alt=e.name,this._textContent=e.name,this._selector=t}_getTemplate(){return document.querySelector(this._selector).content.querySelector(".card").cloneNode(!0)}_handleToggleLike(e){e.target.classList.toggle("card__heart_like")}_handleDeleteCard(e){e.target.closest(".card").remove()}_handleOpenImageModal(){a.src=this._src,a.alt=this._alt,l.textContent=this._alt,i(o)}_setEventListeners(){this._cardImage.addEventListener("click",(()=>{this._handleOpenImageModal()})),this._cardLikeButton.addEventListener("click",(e=>{this._handleToggleLike(e)})),this._deleteCardButton.addEventListener("click",(e=>{this._handleDeleteCard(e)}))}_fillImageCard(){this._cardImage.src=this._src,this._cardImage.alt=this._alt,this._cardLabel.textContent=this._textContent}getCardElement(){return this._element=this._getTemplate(),this._cardImage=this._element.querySelector(".card__image"),this._cardLikeButton=this._element.querySelector(".card__heart"),this._deleteCardButton=this._element.querySelector(".card__delete"),this._cardLabel=this._element.querySelector(".card__label-text"),this._setEventListeners(),this._fillImageCard(),this._element}}function c(e,t,n){return(t=function(e){var t=function(e,t){if("object"!=typeof e||null===e)return e;var n=e[Symbol.toPrimitive];if(void 0!==n){var i=n.call(e,"string");if("object"!=typeof i)return i;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(e);return"symbol"==typeof t?t:String(t)}(t))in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}class d{constructor(e,t){c(this,"_showInputError",((e,t)=>{const n=this._formElement.querySelector(`#${e.id}-error`);n.textContent=t,n.classList.add(this._configDict.errorClass)})),c(this,"_hideInputError",(e=>{const t=this._formElement.querySelector(`#${e.id}-error`);t.classList.remove(this._configDict.errorClass),t.textContent=""})),c(this,"_hasInValidInput",(()=>this._inputList.some((e=>!e.validity.valid)))),c(this,"_toggleButtonState",(()=>{this._hasInValidInput()?this._disableSubmit():(this._buttonElement.classList.remove(this._configDict.inactiveButtonClass),this._buttonElement.removeAttribute("disabled",!0))})),c(this,"_checkInputValidity",(e=>{e.validity.valid?this._hideInputError(e):this._showInputError(e,e.validationMessage)})),c(this,"_disableSubmit",(()=>{this._buttonElement.setAttribute("disabled",!0),this._buttonElement.classList.add(this._configDict.inactiveButtonClass)})),c(this,"enableValidation",(()=>{this._setEventListeners()})),c(this,"resetValidation",(()=>{this._inputList.forEach((e=>{this._hideInputError(e)})),this._disableSubmit()})),this._configDict=e,this._formElement=t}_setEventListeners(){this._formElement.addEventListener("submit",(function(e){e.preventDefault()})),this._inputList=Array.from(this._formElement.querySelectorAll(this._configDict.inputSelector)),this._buttonElement=this._formElement.querySelector(this._configDict.submitButtonSelector),this._toggleButtonState(),this._inputList.forEach((e=>{e.addEventListener("input",(()=>{this._checkInputValidity(e),this._toggleButtonState()}))})),this._formElement.addEventListener("reset",(()=>{this._disableSubmit()}))}}const u=[{name:"Yosemite Valley",link:e+"b5be8af8c53644eef862.jpg"},{name:"Lake Louise",link:e+"a90e0a6180375085e7d4.png"},{name:"Bald Mountains",link:e+"ec2f35af0a0b741d8ba8.png"},{name:"Latemar",link:e+"6fee62dadeb5c8ad05bd.png"},{name:"Vanoise National Park",link:e+"1e74cfe900aa3d227b1c.png"},{name:"Lago di Braies",link:e+"5c121f351b97c27131e8.png"}],_={formSelector:".modal__form",inputSelector:".modal__input",inputErrorSelector:".modal__input-error",submitButtonSelector:".modal__submit",inactiveButtonClass:"modal__submit_inactive",errorClass:"modal__input-error_display"},m=Array.from(document.querySelectorAll(_.formSelector)),h=document.querySelector(".profile__pen"),f=document.querySelector(".profile__name"),p=document.querySelector(".profile__name-tag"),g=document.querySelector("#profile-edit"),v=g.querySelector(".modal__form"),b=v.name,y=g.querySelector("#profile-modal-name"),S=g.querySelector("#profile-modal-job"),E=document.querySelector(".content__list"),L=document.querySelector(".profile__add-button"),q=document.querySelector("#add-card"),k=q.querySelector(".modal__form"),C=(k.name,q.querySelector("#add-card-title")),I=q.querySelector("#add-card-image-url"),w={};m.forEach((e=>{const t=new d(_,e);w[e.name]=t,t.enableValidation()})),h.addEventListener("click",(function(){w[b].resetValidation(),y.value=f.textContent,S.value=p.textContent,i(g)})),v.addEventListener("submit",(function(e){e.preventDefault(),f.textContent=y.value,p.textContent=S.value,r(g)}));const B=e=>new s(e,"#card").getCardElement();u.forEach((e=>{const t=B(e);E.append(t)})),L.addEventListener("click",(function(){i(q)})),k.addEventListener("submit",(function(e){e.preventDefault();const t=B({name:C.value,link:I.value});E.prepend(t),r(q),k.reset()}))}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,